

SQL for Database creation and insertion


DROP TABLE SALELIST;
DROP TABLE PRODUCTS;

Create Table PRODUCTS(
prod_id int NOT NULL AUTO_INCREMENT,
prod_name	varchar(50),
prod_type	varchar(30),
sale_price		decimal(5,2),
supplier_price	decimal(5,2),
PRIMARY KEY		(prod_id)
);

Create Table SALELIST(
sale_id		int		NOT NULL 	AUTO_INCREMENT,
prod_id		int		NOT NULL,
date_sold	varchar(15),
amount_sold	int,
sold_by		varchar(20),
Primary Key		(sale_id),
Foreign Key		(prod_id)								REFERENCES PRODUCTS(prod_id)
);

INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price)
VALUES('Sundown Naturals Vitamin C 300ml', 'Vitamin', '9.70', '4.60');
INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price)
VALUES('Sundown Naturals Vitamin D 300ml', 'Vitamin', '15.42', '9.80');
INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price)
VALUES('Colgate 100ml Mint', 'Toothepaste', '6.50', '4.00');

INSERT INTO SALELIST(prod_id, date_sold, amount_sold, sold_by)
VALUES('1', '20/09/2017', '2', 'Kelly');
INSERT INTO SALELIST(prod_id, date_sold, amount_sold, sold_by)
VALUES('3', '21/09/2017', '3', 'Kelly');
INSERT INTO SALELIST(prod_id, date_sold, amount_sold, sold_by)
VALUES('2', '20/09/2017', '1', 'Sarah');




Queries for data output on web pages

--To order sales by most recent date
SELECT * FROM `salelist` ORDER BY date_sold DESC

--To join the two tables using a right join and display information
--from both
SELECT salelist.sale_id, products.prod_id, products.prod_name, salelist.date_sold, salelist.sold_by, salelist.amount_sold, 
(salelist.amount_sold * (products.sale_price - products.supplier_price)) AS profit
FROM salelist
RIGHT JOIN products
ON salelist.prod_id = products.prod_id
ORDER BY salelist.date_sold;