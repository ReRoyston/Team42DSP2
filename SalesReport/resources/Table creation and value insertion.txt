

SQL for Database creation and insertion


DROP TABLE SALELIST;
DROP TABLE PRODUCTS;
DROP TABLE EMPLOYEES;

Create Table PRODUCTS(
prod_id int NOT NULL AUTO_INCREMENT,
prod_name	varchar(50),
prod_type	varchar(30),
sale_price		decimal(5,2),
supplier_price	decimal(5,2),
units_in_stock int,
PRIMARY KEY		(prod_id)
);

Create Table SALELIST(
sale_id		int		NOT NULL,
prod_id		int		NOT NULL,
date_sold	varchar(15),
amount_sold	int,
sold_by		varchar(20),
Primary Key		(sale_id, prod_id),
Foreign Key		(prod_id)								REFERENCES PRODUCTS(prod_id)
);

Create Table EMPLOYEES(
emp_id int NOT NULL AUTO_INCREMENT,
emp_name	varchar(50),
PRIMARY KEY		(emp_id)
);

INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price, units_in_stock)
VALUES('Sundown Naturals Vitamin C 300ml', 'Vitamin', '9.70', '4.60', '98');
INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price, units_in_stock)
VALUES('Sundown Naturals Vitamin D 300ml', 'Vitamin', '15.42', '9.80', '98');
INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price, units_in_stock)
VALUES('Colgate 100ml Mint', 'Toothepaste', '6.50', '4.00', '196');
INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price, units_in_stock)
VALUES('Nurofen Zavance 200mg', 'Pain relief', '9.62', '4.30', '100');
INSERT INTO PRODUCTS(prod_name, prod_type, sale_price, supplier_price, units_in_stock)
VALUES('Panadol 200mg', 'Pain relief', '8.50', '4.00', '100');

INSERT INTO SALELIST(sale_id, prod_id, date_sold, amount_sold, sold_by)
VALUES('1', '1', '20/09/2017', '2', 'Kelly');
INSERT INTO SALELIST(sale_id, prod_id, date_sold, amount_sold, sold_by)
VALUES('1', '3', '20/09/2017', '3', 'Kelly');
INSERT INTO SALELIST(sale_id, prod_id, date_sold, amount_sold, sold_by)
VALUES('2', '2', '20/09/2017', '1', 'Sarah');
INSERT INTO SALELIST(sale_id, prod_id, date_sold, amount_sold, sold_by)
VALUES('3', '3', '12/09/2017', '3', 'Dan');
INSERT INTO SALELIST(sale_id, prod_id, date_sold, amount_sold, sold_by)
VALUES('4', '2', '15/09/2017', '1', 'Steve');

INSERT INTO EMPLOYEES(emp_name)
VALUES('Steve');
INSERT INTO EMPLOYEES(emp_name)
VALUES('Kelly');
INSERT INTO EMPLOYEES(emp_name)
VALUES('Sarah');
INSERT INTO EMPLOYEES(emp_name)
VALUES('Dan');
INSERT INTO EMPLOYEES(emp_name)
VALUES('Li');
INSERT INTO EMPLOYEES(emp_name)
VALUES('Sherwin');


Queries for data output on web pages

--To order sales by most recent date
SELECT * FROM `salelist` ORDER BY date_sold DESC

--Product data necessary for new sale_id
SELECT prod_id, prod_name, prod_type FROM products;

--To join the two tables using a right join and display information
--from both
SELECT salelist.sale_id, products.prod_id, products.prod_name, salelist.date_sold, salelist.sold_by, salelist.amount_sold, 
(salelist.amount_sold * (products.sale_price - products.supplier_price)) AS profit
FROM salelist
RIGHT JOIN products
ON salelist.prod_id = products.prod_id
ORDER BY salelist.date_sold;

--To update the quantity remaining in our product table when a new sale is added
UPDATE PRODUCTS
SET units_in_stock = units_in_stock - 2
WHERE prod_id = 5;